// <auto-generated />
using System;
using IMDB_Clone;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMDB_Clone.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20211125110817_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IMDB_Clone.Entities.Actor", b =>
                {
                    b.Property<int>("CrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrewID"), 1L, 1);

                    b.Property<int>("CrewAge")
                        .HasColumnType("int");

                    b.Property<string>("CrewBio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrewID");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.Director", b =>
                {
                    b.Property<int>("CrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrewID"), 1L, 1);

                    b.Property<int>("CrewAge")
                        .HasColumnType("int");

                    b.Property<string>("CrewBio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrewID");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.MovieActor", b =>
                {
                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.HasKey("ActorId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieActor");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.Writer", b =>
                {
                    b.Property<int>("CrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrewID"), 1L, 1);

                    b.Property<int>("CrewAge")
                        .HasColumnType("int");

                    b.Property<string>("CrewBio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CrewSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CrewID");

                    b.ToTable("Writers");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.MovieActor", b =>
                {
                    b.HasOne("IMDB_Clone.Entities.Actor", "Actor")
                        .WithMany("MovieActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMDB_Clone.Entities.Movie", "Movie")
                        .WithMany("MovieActors")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.Actor", b =>
                {
                    b.Navigation("MovieActors");
                });

            modelBuilder.Entity("IMDB_Clone.Entities.Movie", b =>
                {
                    b.Navigation("MovieActors");
                });
#pragma warning restore 612, 618
        }
    }
}
